<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Gir.Core</title><link>https://gircore.github.io/docs.html</link><description>Recent content in Docs on Gir.Core</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gircore.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://gircore.github.io/docs/apps.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gircore.github.io/docs/apps.html</guid><description>Applications # Applications using gir.core. To add a new application to the list edit this page .
Denaro # Denaro is a personal finance manager.</description></item><item><title/><link>https://gircore.github.io/docs/build.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gircore.github.io/docs/build.html</guid><description>Build # To generate the bindings locally execute the following commands in a terminal. Make sure to initialise submodules with --recursive otherwise the gir-files directory will not be loaded properly.
$ git clone --recursive https://github.com/gircore/gir.core.git $ cd gir.core/src $ dotnet fsi GenerateLibs.fsx $ dotnet build GirCore.Libs.slnf If you want to clean the Libs folder of all generated files run:
$ dotnet fsi CleanLibs.fsx Native Libraries # The project includes a C library ( GirTest ) which is used for testing the generator.</description></item><item><title/><link>https://gircore.github.io/docs/contributing.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gircore.github.io/docs/contributing.html</guid><description>Contributing # Contributing to gir.core is very easy. If there is something wrong or missing just open an issue to get in contact or join #gircore on matrix .
If a pull request contributes new code, please be aware of the project&amp;rsquo;s license . For easy adoption of the code please adhere to the following coding guidelines.
Coding Guidelines # The following guidelines aim to provide a framework to write code in a consistent style.</description></item><item><title/><link>https://gircore.github.io/docs/libraries.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gircore.github.io/docs/libraries.html</guid><description>Libraries # Currently there are multiple libraries available to get started with C# development for Linux: Gtk , WebkitGTK , libshumate libadwaita , GIO , gstreamer .
GTK # Gtk is the toolkit which is used to display windows and widgets on the screen. The widgets can be added directly in code or described through an xml file.
Supported widgets are for example: Windows, dialogs, labels, images, spinner, progressbars, several buttons and switches, textboxes, tables, lists, menus, toolbars, popovers, and much more.</description></item><item><title/><link>https://gircore.github.io/docs/use.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gircore.github.io/docs/use.html</guid><description>Use # To use the bindings create a C# project and just add the corresponding nuget packages .
There are a lot of sample projects available which should get you started.
As long as there is no API documentation available you can refer to the original documentation .
The gir.core project is not providing the actual C libraries but only the C# bindings. Please ensure that the corresponding packages are installed on your system otherwise the binding will not find a target to bind to during runtime.</description></item></channel></rss>